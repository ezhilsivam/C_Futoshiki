#include "pch.h"
#include <iostream>
#include "conio.h"

bool TestInput9x9()
{
	PRINTMSG;
	int Numeral_Inputs[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
					 		 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
						     0, 0, 0, 0, 0, 0, 0, 0, 0,
		                     0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0 };


	char betweenColsChar[] = {  '.', '.', '.', '.', '.', '.', '.', '.',
							    '.', '.', '.', '.', '.', '.', '.', '.',
							    '.', '.', '.', '.', '.', '.', '.', '.',
							    '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.' };

	char betweenRowsChar[] = {	'.', '.', '.', '.', '.', '.', '.', '.', '.',
							    '.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.' };

	return SolveFutoshiki(Numeral_Inputs, betweenColsChar, betweenRowsChar, 9);
}

bool TestInput9_1()
{
	PRINTMSG;
	int Numeral_Inputs[] = { 0, 8, 6, 0, 0, 0, 2, 7, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 2, 0, 0, 0, 0, 0, 3, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 1, 0, 0, 0, 0, 0, 8, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 9, 8, 0, 0, 0, 3, 1, 0 };


	char betweenColsChar[] = {  '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '<', '<', '<', '.', '.', '.',
								'.', '.', '.', '.', '.', '>', '<', '.',
								'>', '.', '.', '>', '.', '.', '.', '.',
								'.', '.', '.', '.', '<', '.', '.', '<',
								'.', '.', '<', '<', '<', '.', '.', '.',
								'>', '<', '.', '.', '<', '<', '.', '>',
								'>', '.', '<', '.', '.', '.', '>', '.',
								'.', '.', '.', '.', '.', '.', '.', '.' };

	char betweenRowsChar[] = {  '^', '.', '.', '.', '.', '.', '.', '.', '^',
								'v', '.', 'v', '.', '.', '.', '.', 'v', 'v',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '^', '.', 'v', 'v', '^', 'v',
								'.', '.', '.', '.', '.', '.', '.', '.', 'v',
								'.', '.', '.', '.', '.', '.', '.', '.', '.',
								'.', 'v', '.', '.', 'v', '.', '^', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '.' };

	return SolveFutoshiki(Numeral_Inputs, betweenColsChar, betweenRowsChar, 9);
}

bool TestInput9_2()
{
	PRINTMSG;
	int Numeral_Inputs[] = { 0, 0, 0, 0, 7, 0, 0, 0, 0,
							 0, 0, 0, 0, 3, 0, 0, 0, 0,
							 0, 0, 0, 7, 0, 9, 0, 0, 0,
							 0, 0, 7, 0, 0, 0, 6, 0, 0,
							 3, 7, 0, 0, 0, 0, 0, 8, 9,
							 0, 0, 3, 0, 0, 0, 7, 0, 0,
							 0, 0, 0, 3, 0, 2, 0, 0, 0,
							 0, 0, 0, 0, 8, 0, 0, 0, 0,
							 0, 0, 0, 0, 6, 0, 0, 0, 0 };


	char betweenColsChar[] = {  '.', '.', '.', '.', '.', '.', '<', '<',
								'.', '.', '.', '.', '.', '>', '.', '.',
								'.', '>', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '<', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '<', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '<',
								'.', '.', '<', '.', '.', '.', '.', '>',
								'.', '.', '.', '.', '.', '>', '.', '.' };

	char betweenRowsChar[] = {  'v', '.', '.', '.', '.', '.', '.', '^', '.',
								'.', '^', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', '.', '.', '^',
								'v', '.', '.', 'v', '.', 'v', '.', 'v', '.',
								'^', '^', '^', '.', '^', '.', '.', '.', '.',
								'.', '.', '.', '.', '.', '.', 'v', '.', 'v',
								'.', '^', '.', '.', '.', '.', '.', '.', '.',
								'^', '.', 'v', '.', '.', '.', '.', '^', '.' };

	return SolveFutoshiki(Numeral_Inputs, betweenColsChar, betweenRowsChar, 9);
}

bool TestInput9_2000()
{
	PRINTMSG;
	int Numeral_Inputs[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 5, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0,
							 0, 0, 0, 0, 0, 0, 0, 0, 0 };


	char betweenColsChar[] = {  '.', '>', '.', '<', '.', '.', '.', '.',
								'.', '.', '<', '<', '.', '>', '.', '.',
								'<', '<', '.', '>', '.', '<', '.', '>',
								'.', '>', '.', '.', '.', '<', '<', '<',
								'.', '.', '.', '.', '.', '.', '.', '.',
								'.', '.', '.', '>', '.', '<', '.', '.',
								'.', '.', '.', '.', '.', '.', '<', '.',
								'.', '.', '.', '>', '>', '.', '.', '.',
								'.', '>', '<', '.', '<', '.', '<', '<' };

	char betweenRowsChar[] = {  '.', '.', '.', '.', '.', 'v', 'v', 'v', '.',
								'.', '.', '.', '.', '.', '.', 'v', '.', '^',
								'.', '.', '.', '.', 'v', 'v', '.', '.', '^',
								'v', '.', 'v', 'v', '.', '^', '.', '.', '.',
								'.', '.', '.', 'v', '^', '.', 'v', '.', '.',
								'^', '.', '^', '.', '.', '.', '.', '^', '.',
								'.', '.', '.', '.', 'v', '.', 'v', '^', 'v',
								'v', 'v', '.', '.', '^', '.', '^', '.', 'v' };

	return SolveFutoshiki(Numeral_Inputs, betweenColsChar, betweenRowsChar, 9);
}